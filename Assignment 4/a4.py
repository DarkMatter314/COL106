import random
import math

#To generate random prime less than N
def randPrime(N):
	primes = []
	for q in range(2,N+1):
		if(isPrime(q)):
			primes.append(q)
	return primes[random.randint(0,len(primes)-1)]

# To check if a number is prime
def isPrime(q):
	if(q > 1):
		for i in range(2, int(math.sqrt(q)) + 1):
			if (q % i == 0):
				return False
		return True
	else:
		return False

#pattern matching
def randPatternMatch(eps,p,x):
	N = findN(eps,len(p))
	q = randPrime(N)
	return modPatternMatch(q,p,x)

#pattern matching with wildcard
def randPatternMatchWildcard(eps,p,x):
	N = findN(eps,len(p))
	q = randPrime(N)
	return modPatternMatchWildcard(q,p,x)

# return appropriate N that satisfies the error bounds
def findN(eps,m):
	''' 
	log here refers to log taken to base 2
	Let x1 be any substring of x
	We have to find probability that f(x1) = f(p) (mod q) is less than eps
	For this, q should divide f(x1)-f(p), whose maximum value is 26^m
	Therefore the number of unfavourable primes are the prime factors of 26^m
	Which is less than log(26^m) = mlog(26)
	Let total number of primes less than N be pi(N)
	Therefore mlog(26)/pi(N) <= eps which gives pi(N) >= mlog(26)/eps

	Claim pi(N) >= k implies N >= 4klog(k)
	Given pi(N) >= N/2log(N)
	So pi(4klogk) >= 4klog(k)/2log(4klogk) > k according to our claim
	Which on simplification gives k>4logk which is true for k>16
	Therefore N >= 4(m/eps)log(26)log((m/eps)log(26))
	If k<=16 we can output such a number for which pi(N) >= 16 which I have chosen as 64
	'''
	k = (m/eps)*math.log2(26)
	if(k<=16): return 64
	else: return int(4*k*math.log2(k))+1 #ceil so that N>4klog(k)

# Return sorted list of starting indices where p matches x
def modPatternMatch(q,p,x):
	m = len(p) # space O(log n)
	n = len(x) # space O(log n)
	fp = fq = 0 # %q is taken everytime so space complexity O(log q) = O(log(m/eps))  
	ans = [] # space O(k)
	power = 1 #Again O(log q) space
	for i in range(0,m):
		fp = (fp + (power*(((ord(p[m-i-1]))%q-65%q)%q))%q)%q #O(log q) space
		fq = (fq + (power*(((ord(x[m-i-1]))%q-65%q)%q))%q)%q #O(log q) space
		power = (power*26)%q
	if(fp == fq): ans.append(0)
	for i in range(1, n-m+1):
		fq = ((26*fq)%q - (power*((ord(x[i-1])-65)%q))%q + ((ord(x[i+m-1])-65))%q)%q #O(log q) space
		if(fp == fq): ans.append(i)
	'''
	f(p) and f(x[0 ... m-1]) is calculates in the first loop
	Time Complexity = O(m log(q))
	Then we iterate through the entire string and each time f is calculated from the previous step
	Each operation takes O(log q) time so time complexity of this loop O(n log(q))
	Total Time Complexity = O((m+n)log(q)) = O((m+n)log(m/eps))
	'''
	return ans

# Return sorted list of starting indices where p matches x
def modPatternMatchWildcard(q,p,x):
	m = len(p)
	n = len(x)
	fp = fq = 0
	ind = m-1 # To store index of '?' Space = O(log q)
	ans = []
	power = powerind = 1 #powerind to store 26^(i-1) % q so space = O(log q)
	for i in range(0,m):
		if(p[m-i-1] == '?'): ind = m-i-1
		if(p[m-i-1] != '?'):
			fp = (fp + (power*((ord(p[m-i-1])-65)%q))%q)%q
			fq = (fq + (power*((ord(x[m-i-1])-65)%q))%q)%q
		if(i!=(m-1) and p[m-i-2]=='?'): 
			powerind = (power*26)%q
			ind = m-i-2
		power = (power*26)%q
	if(fp == fq): ans.append(0)
	for i in range(1, n-m+1):
		fq = ((26*fq)%q - (power*((ord(x[i-1])-65)%q))%q + ((ord(x[i+m-1])-65))%q + (26*powerind%q*(ord(x[i+ind-1])-65)%q)%q - (powerind*(ord(x[i+ind])-65)%q)%q)%q
		if(fp == fq): ans.append(i)
	return ans
	'''
	Everything is same as before except we are making few more opration which take time O(log(m/eps))
	So time complexity is still the same
	'''

print(modPatternMatch(11,'ATGC','ACTATCAGTACCCGTGTCTCGACTCTGCCGCGGCTACCTATCGCCTGAAAGCCAGTTGGTGTTAAGGGGTGCTCTGTCCAGGACGCCACGCGTAGTGAGACTTACATGTTCGTTGGGTTCACCCGACTCGGACCTGAGTCGACCAAGGACGCACTCGAGCTCTGAGCCCTACTGTCGAGAAATATGTATCTCGCCCCCGCAGCTTGCCAGCTCTTTCAGTATCATGGAGCCCATGGTTGAATGACTCCTATAACGAACTTCGACATGGCAAAATCCCCCCCTCGCGACTTCTAGAGAAGAAGAGTACTGACTTGAGCGCTCCCAGCACTTCAGCCAAGGAAGTTACCAATTTCTTGTTTCCGAATGACACGCGTCTCCTTGCGGGTAAATCGCCGACCGCAGAACTTACGAGCCAGGGGAAACAGTAAGGCCTAATTAGGTAAAGGGAGTAAGTGCTCGAACGGTTCAGTTGTAACCATATACTTACGCTGGATCTTCTCCGGCGAATTTTTACCGTCACCAACTACGAGATTTGAGGTAAACCAAATGAGCACATAGTGGCGCTATCCGACTATTTCCAAATTGTAACATATCGTTCCATGAAGGCCAGAGTTACTTACCGGCCCTTTCCATGCGCGCGCCATACCCTCCTAGTTCCCCGGTTATCTCTCCGAGGAGAGAGTGAGCGATCCTCCGTTAACATATTGTTACCAATGACGTAGCTATGTATTTTGCACAGGTAGCCAACGGGTTTCACATTTCACAGATAGTGGGGATCCCGGCAAAGGGCGTATATTTGCGGTCCAACATAGGCGTAAACTACGATGGCACCTACTCAGACGCAGCTCGTGCGGCGTAAATAACGTACTCATCCCAACTGATTCTCGGCAATCTACGGAGCGACATGATTATCAACAGCTGTCTAGCAGTTCTAATCTTTTGCCATGGTCGTAAAAGCCTCCAAGAGATTGATCATACCTATCGGCACAGAAGTGACACGACGCCGATGGGTAGCGGACTTTAGGTCAACCACAGTTCGGTAGGGGACAGGCCCTGCGGCGTACATCACTTTGTATGTGCAACGTGCCCAAGTGGCGCCAGGCAAGACTCAGCTGGTTCCTGTGTTAGCTCGAGGCTAGGCATGACAGCTCTTTGAACATGGGCTGGGGGCCTCGAACGGTCGAGAAGCCCATAGTACCTCGGATACCAAGTTGCGCAGGCTATAGCTTGAAGCTGTACTATTTCAGGGGGGGAGCCCTGATGGTCTCTTCTTCTGATGACTCAACTCGCTAGGGTCGTGAAGTCGATTCCTTCGATGGTTAAAAATCAAAGGCTCAGAGTGCAGACTGGAGCGCCCATCTAACGGTTCGCATCTCGAATGCTCGGTCGCCTTTCACATTCCGCGAAAATTCATACCGCTCATTCACTAGGTTGCGAAGTCTACACTGATATATGAATCCGAGCTAGAGCAGGGCTCTTAAAATTCGGAGTCGTTGATGCTCAATACTCCAATCGGTTTTTTCGTGCACCACCGCGAGTGGCTGACAAGGGTTTGACATTGAGTAGCAAGGCAGTTCCGGGCTGAATGAAGCGCCGGGAAAGGTACGCGCCTGGTATGGCAGGATTAAGAAGCCAATACAAAGGCTACATCCTCACTCGGATGGAGGCAAACGCAGAACAATGGTTACTTTTTCGATACGTGAAACATGTCCCACGGTAGCCCAAAGACTTGAGAGTCTATCACCCCTAGGGCCCTTTCCCGGATATAAACGCCAGGTTGAATCCGCATTTGGAGGTACGATGGATCAGTCTGGGTGGGGCGCGCCCCATTTATACCGTGAGTAGGGTCGACCAAGAACCGCAAGATGCGACGGTGTACAAGTAATTGTCAACAGACCATCGTGTTTTCATAATGGTACCAGGATCTTCAAGCCGTGTCAATCAAGCTCGGATTACGGTGTTTACTCCGTCCTGCGGTTACTCACGGTCTGTAATCCACCTCAAGTCAAGCCATTGCCTCTCTGAGACGCCGCATGAATTAATACGTATACTTTGCGCGGGTTCACTGCGATCCGTTCAGAGTCGTCCAAGGGCACAATCGAGCTCCCATTTGTATGTTCGGCTAACTTGTACCCAACCCCCGAAGTTTAGCAGGTCGTGGGGTGTCATGGAGCCTCTGGTTCATCCCGTGGGATATCAAGCTTCGTCTTGATAAAGCTCCCCGCTCGGGTGTAGCAGAGAAGACGCCTACTGAATTGTGCGATCCCTGCACCTCAGCTAAGGTAGCTACCAATATTTAGTTTCTAAGCCTTGCGACAGACCTCCCACTTAGATTGCCACGCATAGAGCTAGCGAGTCAGCGAAAAGCATGACGCGCTTTCAAGCGTGGCGAGTATGTGAACCAAGGCTTCGGACAGGACTATATACTTAGGTTTGATCTCGCCCCGAGAACTGTAAACCTCAACATTTATAGATTATAAGGTTAGCCGAAAATGCACGTGGTGGCGCCCGCCGACTGCTCCCTGAGTGTGGCTCTTTGTTCTGTCAACGCCCGACCTTCATCGCGGCCGATTCCTTCTGCGGACCATGTCGTCCTGATACTTTGGCCATGTTTCCGTTGTAGGAGTGAAGCCACTTGGCTTTGCGCCGTAGTTCCAATGAAAAACCTATGGACTTTGTTTAGGGTAGCATCAGGAATCTGAACCCTCAGAAAGTGGGGATCCCGGGTATAGACCTTTATCTGCGGTTCAAGTTAGGCATAAGGCTGCATGCTACCTTGTCACACCTACACTGCTCGAAGTAAATATGGGAAGCGTGCGACCTGGCTCCAGGCGTTCCGCGCCGCCACGTGTTCGTTAACTGTTGATTGGTGGCACATAAGTAATACCATGGTCCCTCAAATTCGGCTCAGTTACCTCGAGCGTTATGTCTCAAATGGCGTAGAACGGCATTGACTGTTTGACACTAGCTGGTGTTCGGTTCGGTAACGGAGAATCTGTGCGGCAATGTCATTAATACATTTGAAACGCGCCGTACCGATGCTGAGCAAGTCAGTGCAGGCTCCCGTGTTAGGATAAGGGTAAACATACAAGTCGATAGAAGATGGGTAGGGGCCTTCAATTCATCCAACACTCTACGGCTCCTCCGAGAGCTAGTAGGGCACCCTGTAGTTGGAAGGGGAACTATTTCGTGGGGCGAGCCCATACCGTCTCTCTTGCGGAAGACTTAACACGATAGGAAGCTGGAATAGTTTCGAACGATGGTTATTAATCCTAATAACGGAACGCTGTCTGGAGGATGAGTCTGACGGAGTGTAACTCGATCAGTCACTCGCTATTCGAACTGGGCGAAAGATCCCAGCGCTCATGCACTTGATCCCGAGGCCTGACCCGATATATGAGCTCAGACTAGAGCGGGGCTGTTGACGTTTGGAGTTGAAAAAATCTATTATACCAATCGGCTTCAACGTGCTCCACGGCAGGCGCCTGACGAGGGGCCCACACCGAGGAAGTAGACTGTTGCACGTTGGGGATAGCGGTAGCTAACTAAGACGCCTGCCACAACAGCAGTATCAAACCCGTACAAAGGGAACATCCACACTTTGGTGAATCGAAGCGCGGCATCAGAATTTCCTTTTGGATACCTGATACAAAGCCCATCGTGGTCCTTAGACTTCGTACACTTACACCTGCACCGCGCGCATGTGGAATTAGAGGCGAAGTACGATCCCTAGACCGACGTACGATGCAACTGTGTGGATGTGACGAGCTTCTTTTATATGCTTCGCCCGCCGGACCGGCCTCGGCATGGCGTAGCAGTGCACAAGCAAATGACAATTAACCACCGTGTATTCGTTATAACATCAGGCAGTTTAAGTCGGGACAATAGGAGCCGCAATACACAGTTTACCGCATCTTGACCTAACTGACATACTGCCATGGACGACTAGCCATGCCACTGGCTCTTAGATAGCCCGATACAGTGATTATGAAAGGTTTGCGGGGCATAGCTACGACTTGCTTAGCTACGTGCGAGGGAAGAAACTTTTGCGTATTTGTATGTTCACCCGTCTACTACCCATGCCCGGAGATTATGTAGGTTGTGAGATGCGGGAGAAGTTCTCGACCTTCCCGTGGGACGTCAACCTATCCCTTAATAGAGCATTCCGTTCGGGCATGGCAGTAAGTACGCCTTCTCAATTGTGCTAACCTTCATCCTTATCAAAGCTTGGAGCCAATGATCAGGATTATTGCCTTGCGACAGACTTCCTACTCACAGTCGCTCACATTGAGCTACTCGATGGGTCATCAGCTTGACCCGGTCTGTTGGGCCGCGATTACGTGAGTTAGGGCTCCGGACTGCGCTGTATAGTCGAATCTGATCCGGCCCCCACAACTGCAAACCCCAACTTATTTAGATAACATGATTAGCCGAAGTTGCACGGGGTGCCCACCGTGGAGTCCTCCCCGGGTGTCCCTCCTTCATTTGACGATAAGCAGCCGCTACCACCATCGATTAATACAAGGAACGGTGATGTTATCATAGATTCGGCACATTACCCTTGTAGGTGTGGAATCACTTAGCTACGCGCCGAAGTCTTATGGCAAAACCGATGGACAATGATTCGGGTAGCACTAAAAGTCCATAGCACGTGCATCCCAACGTGGCGTGCGTACAGCTTAACCACCGCTTCATGCTAAGGTGCTGGCTGCATGCTAAGTTGATACGCCTGCACTGCTCGAAGAAAATATACGAAGCGGGCGGCCTGGCCGGAGCACTACCCCATCGACGCGTACTCGAATACTGTTAATTGCTCACACATGAACAAAATAGTAGAGTGTCACTTTCAGCCCTCTTATCCTCGGCGATGTGTGTAAAATGGCGTTGATCTGGATTGACTCTATGACGGTATCTGCTGATGGGTAGGGAGATCCGGAATCTATCGGCCTATGTCACTGAAACTATCCAAACACCCCATGTCGATACTGAACGTATCGACGCATACCTCCTTCCTTGAAAACGCACAATCATACAACTGGGCACATAATGCGTACGCCCATCTAGTACACCCATCTCTGTAGGTCCAGTTCAAGAGCTGGAAGAGCACCCTCCACTTGGTCAAGTGATATCCTGGTAAGGTAAGCTCGTACCGTGATTCATGCGGCAGGGGTAAGACCATTAGAAGTAGGGATAGTCCCAAACCTCACTTACCACTGCCAATAAGGGGTCCTTATCTGAAGGATGAGTGTCAGCCAGTGTAACCCGATGAGGAACCCAGAAGCCGAACTGGGCCAGACAACCCGGCGCTAACGCACTCAAAGCCGGGACGCGACGCGACATAACGGCTAAGAGTAGCCCCGGAGTGTAGACCTTTGGGGTTGGATAAATCTGTCGTGGTAACCGGCTTCAACGACCCGTACACGTGGCACTTCAGGAGGCGCCCGCAGGGGGGAAGTTTTCTGCTATTCGAGGCCGTTCGTGGTAACTAGTTGCGTTCCTAGCCGCTATAATTGTTTCTATGCCGAGTAATGAGAACAACCACACCATAGCGATTTGACGCGGCGCCTCGGAATACCGTTTTGGCAGGCGCTTGCTAAGGCCATCGCGAATTCCAGGTATCGTGCATGTAGCGTAGGGCCGCACGCAAGTTAAACTGCTGGGGAACCGCGTTTCCACGACCGGTGCACGATTTAATTTCGCCGACGTGACGACATTCCTGCTAATGCCTCACCCGCCGGACCCCTCTCGTGATGGGGTAGCTGGACATGTCCTTGTGAGATATAACAAGAGCCTGCCTGTTTAATGATCTCACGGCGAAAGTCGGGGGGACAGCAGCGGCTGCAGACATTATACCGCAACAACACTAAGGTGAGATAACTCCGTAGTTGACTACGCATTCCTCTAGACCTTACTTGACCGGATACAGTGACTTTGACACGTTTGTGGGTTACAGCAATCACATCCAAGACTGCCTATGGAGGAAGCAACTCTTGAGTGTTAATATGTTGACCCCTGTATTAGGGATGCGGGTAGTAGATGAGCGCAGGGACACCGAGGTCAAGTACATTACCCTCTCATAGGAGGTGTTCTAGATCACCATACCACCATATCATTCGAGCATGACACTATCTGCGCTGTCCCCATCCTGGTAGTCATTATTCCTATCACGCTTTCGAGTGACTGGTGACGGATATCCCCCACGAATGAAAATCTTTTTCACTGACAGTCATATTGGGGTGCTCCTAAGCTTTTCCACTTGGCTGGGTCTGCTAGGCCTCCGTGCCCGGAGTTTCGGCGCTGTGCTGCCGAGAGCCGGCCATTGTCATTGGGGCCTCACTTGAGGATACCCCGACCTATTTTGTCGGGACCACTCGGGGTAGTCGTTGGGCTTATGCACCGTAAAGTCCTCCGCCGGCCTCCCCGCTACAGAAGATGATAAGCTCCGGCAAGCAATTATGAACAACGCAAGGATCGGCGATATAAACAGAGAAACGGCTGATTACACTTGTTCGTGTGGTATCGCTAAATAGCCTCGCGGAGCCTTATGCCATACTCGTCCGCGGAGCACTCTGGTAACGCTTATGGTCCATAGGACATTCATCGCTTCCGGGTATGCGCTCTATTTGACGATCCTTTGGCGCACAGATGCTGGCCACGAGCTAAATTAGAGCGACTGCACAACTGTAAGGTCCGTCACGCAGACGACGGCCCAGGGAGACCACTGACCCATCAACCTGTACGGGAACCTTCTGTATCGTTCTCGGACGGAGAGATAACTACAGTGCCGCTTACAGCCCCTCTGTCGTCGCCGACGTCTGTAATGTAGCCTCATTGTGATTCCACCCTATTGAGGCATTGACTGATGCGGGAAGAGATCTGAAATGAACTGGTCTATGCGACAGAAACTGTGCAGCTACCTAATCTCCTTAGTGTAGGTTCTGACCGATTCGTGCTTCGTTGAGAACTCACAATTTAACAACAGAGGACATAAGCCCTACGCCCATGATCTACTGACGTCCCTGAGGCTGCAATTCATGTAATGGGACAGTATCCGCGGCAAGTCCTAGTGCAATGGCGGTATTCTACCCTCGTACTGTAGTAGAGGCGACGCGGGTGCGGTCATCACTAATAAGGATATTGGGAAGACTCACAGGCCTCCGCCTTTAGGCGGTGCTTACTCTTACATAAAGGGGCTGTTAGTATTACCCCGCGAGGATTCGAAAAGGTGAGCCAACCCGGCCGATCCGGAGAGACGGGCCTCAAAGCCGCGTGACGACGGCTGTGGGCCCGTAACAAAATCCCCGCAATAAGCTCCCGTGAGCGTCGGTTGAACAGCCCTGGTCGGCCCCATCAGTAGCCCGAATATGTCGCTTTACGGGTCCTGGGCCGGGGTGCGATACCTTGCAGAAATCGAGGCCGTTCGTTAATTCCTGTTGCATTCGTACCGCCTATATTTGTCTCTTTGCCGGCTTATATGGACAAGCATAGCATAGCCATTTATCGGAGCGCCTCCGTACACGGTATGATCGGACGCCTCGTGAGATCAATACGTATACCAGGTGTCCTGTGAGCAGCGAAAGCCTATACGCGAGATACACTGCCAAAAATCCGCGTGATTACGAGTCGTGGCAAATTTGGTCTGGCTGTGGTCTAGACATTCCAGGCGGTGCGTCTGCTCTCGGGTGCCTCTAGTGGCTGGCTAGATAGACTAGCCGCTGGTAAACACACCATGACCCCGGCTCTCCATTGATGCCACGGCGATTGTTGGAGAGCCAGCAGCGACTGCAAACATCAGATCAGAGTAATACTAGCATGCGATAAGTCCCTAACTGACTATGGCCTTCTGTAGAGTCAACTTCACCACATATGCTGTCTCTGGCACGTGGATGGTTTAGAGGAATCAGATTCAAGTCTGGTTAACCATCAAACAGGTCTTGAGTCTAAAATTGTCGTCTCCTGCGTACGAGATGGAAATACTAGGTAACTACAGGGACTCCGACGTTATGTACGTTGCTCCGTCAGAGGCGCCATTCAGGATCACGTTACCGCGAAAAAAAGGGACCAGGAGCTCTTCTCCCCTGCGGTCACGTCTATAGAAATTACACCATTAACCCTCCTGAGAACCGGGAGGCGGGAATCCGTCACGTATGAGAAGGTATTTGCCCGATAATCAATACCCCAGGCTTCTAACTTTTTCCACTCGCTTGAGCCGGCTAGGCCTTTCTGCCCGAAGTTTCGATGGACTGGTGCCAACGCGCAGGCATAGTTTTAGGAGAATTATTCGGGGGCAGTGACAACCAACATCTCGGGTCCTGCCCAACCGGTCTACACGCTAATATAGCGAATCACCGAGAACCCGGCGCCACGCAATGGAACGTCCTTAACTCCGGCAGGCAATTAAAGGGAACGTATGTATAACGCAAAAAAACAGAAAAATAGGCGAATGAATCTTTTCTCTGTGTATCGAAGAATGGCCTCGCGGAGGCATGCGTCATGCTAGCGTGCGGGGTACTCTTGCTATCCATATGGTCCACAGGACACTCGTTGTTTTCGGATTTACCCTTTATGCGCCGGTTTTCAGCCACGCTTATGCCCAGCATCGTTACAACCAGACCGATACTAGATGTATAAAGTCCGCCATGCAGACGAGACCAGTCGGAGATTACCGAGCATTCTATCAGGTCGGCGACCACTAGTGAGCTACTGGAGCCGAGGGGTAACCACGATGCCGCTAAGAACCTCTCGGTCGACGCAAGCGATTACACTCCTGTCACATCATAATCGTTTGCTATTCAGGGGTTGACCAACACCGGAAAACTTTTCACTTGAAGTATTGTATACGACAGGGTGCGTGTACCTACCAAACCTGTTTAAACTAAGTTCAGACTAGTTGGAAGTGTGTCTAGATCTTAGTTTTCGTCACTAGAGGGCCCACGCTTTATTTTTATGATCCATTGATCTCCCAGACGCTGCAAGATTTGCAACCAGGCAGACTTGGCGGTAGGTCCTAGTGCAGCGGGACTTTTTTTCTATAGTCCTTGAGAGGAGGAGTCGTCAGTCCAGATACCTTTGATGTCCTGATTGGAAGGACCGTTGGCCCCCCACCCTTAGGCAGTGTACTCAGTTCCATAAACGAGCTATTAGATATGAGGTCCGTAGATTGAAAAGGGTGACGGAATTCGCCCGAACGGGAAAGACGGACAACTAGGTATCCTGAGCACGGTTGCGCGTCCGTATCAAGCTCCTCTTTATAGGCCCCGGTTTCTGTTGGTCGTAGAGCGCAGAACGGGTTGGGGGGATGTACGACAATATCGCTTAGTCACCTTTGGGCCACGGTCCGCTACCTTACAGGAATTGAGACCGTCCTTTAATTTCCCTTGCATATATGTTGCGTTTCTTCGACCTTTTAACCGCTCCCTTAGGAGAAAGACAGATAGCTTCTTACCCGTACTCCACCGTTGGCAGCACGATCGCATGTCCCACGTGAACCATTGGTAAACCCTGTGGCCTGTGAGCGACAAAAGCTTTAATGGGAAATTCGCGCCCATAACTTGGTCCGAATACGGGTCCTAGCAACGTTCGTCTGAGTTTGATCTATATAATACGGGCGGTATGTCTGCTTTGATCAACCTCCAATAGCTCGTATGATAGTGCACCCGCTGGTGATCACTCAATGATCTGGGCTCCCCGTTGCAACTACGGGGATTTTTCGAGACCGACCTGCGTTCGGCATTGTGGGCACAGTGAAGTATTAGCAAACGTTAAGTCCCGAACTAGATGTGACCTAACGGTAAGAGAATTTCATAATACGTCCTGCCGCACGCGCAAGGTACATTTGGACAGTATTGAATGGACTCTGATCAACCTTCACACCGATCTAGAATCGAATGCGTAGATCAGCCAGGTGCAAACCAAAAATTCTAGGTTACTAGAAGTTTTGCGACGTTCTAAGTGTTGGACGAAATGATTCGCGACCCAGGATGAGGTCGCCCTAAAAAAT'))